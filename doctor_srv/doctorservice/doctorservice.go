// Code generated by goctl. DO NOT EDIT.
// Source: doctor.proto

package doctorservice

import (
	"context"

	"github.com/qas491/hospital/doctor_srv/doctor"

	"github.com/zeromicro/go-zero/zrpc"
	"google.golang.org/grpc"
)

type (
	CareHistoryInfo           = doctor.CareHistoryInfo
	CreateCareHistoryReq      = doctor.CreateCareHistoryReq
	CreateCareHistoryResp     = doctor.CreateCareHistoryResp
	CreatePrescriptionReq     = doctor.CreatePrescriptionReq
	CreatePrescriptionResp    = doctor.CreatePrescriptionResp
	DoctorPerformanceInfo     = doctor.DoctorPerformanceInfo
	GenerateWeeklyRankingReq  = doctor.GenerateWeeklyRankingReq
	GenerateWeeklyRankingResp = doctor.GenerateWeeklyRankingResp
	GetCareHistoryDetailReq   = doctor.GetCareHistoryDetailReq
	GetCareHistoryDetailResp  = doctor.GetCareHistoryDetailResp
	GetCareHistoryListReq     = doctor.GetCareHistoryListReq
	GetCareHistoryListResp    = doctor.GetCareHistoryListResp
	GetDoctorPerformanceReq   = doctor.GetDoctorPerformanceReq
	GetDoctorPerformanceResp  = doctor.GetDoctorPerformanceResp
	GetMedicinesDetailReq     = doctor.GetMedicinesDetailReq
	GetMedicinesDetailResp    = doctor.GetMedicinesDetailResp
	GetMedicinesListReq       = doctor.GetMedicinesListReq
	GetMedicinesListResp      = doctor.GetMedicinesListResp
	GetPrescriptionDetailReq  = doctor.GetPrescriptionDetailReq
	GetPrescriptionDetailResp = doctor.GetPrescriptionDetailResp
	GetPrescriptionListReq    = doctor.GetPrescriptionListReq
	GetPrescriptionListResp   = doctor.GetPrescriptionListResp
	GetWeeklyRankingReq       = doctor.GetWeeklyRankingReq
	GetWeeklyRankingResp      = doctor.GetWeeklyRankingResp
	MedicinesInfo             = doctor.MedicinesInfo
	PerformanceDetail         = doctor.PerformanceDetail
	PrescriptionInfo          = doctor.PrescriptionInfo
	PrescriptionItem          = doctor.PrescriptionItem
	RankingInfo               = doctor.RankingInfo
	ReviewPrescriptionReq     = doctor.ReviewPrescriptionReq
	ReviewPrescriptionResp    = doctor.ReviewPrescriptionResp
	SelectMedicinesReq        = doctor.SelectMedicinesReq
	SelectMedicinesResp       = doctor.SelectMedicinesResp

	DoctorService interface {
		// 开处方
		CreatePrescription(ctx context.Context, in *CreatePrescriptionReq, opts ...grpc.CallOption) (*CreatePrescriptionResp, error)
		// 审核处方
		ReviewPrescription(ctx context.Context, in *ReviewPrescriptionReq, opts ...grpc.CallOption) (*ReviewPrescriptionResp, error)
		// 获取处方列表
		GetPrescriptionList(ctx context.Context, in *GetPrescriptionListReq, opts ...grpc.CallOption) (*GetPrescriptionListResp, error)
		// 获取处方详情
		GetPrescriptionDetail(ctx context.Context, in *GetPrescriptionDetailReq, opts ...grpc.CallOption) (*GetPrescriptionDetailResp, error)
		// 选择药品
		SelectMedicines(ctx context.Context, in *SelectMedicinesReq, opts ...grpc.CallOption) (*SelectMedicinesResp, error)
		// 获取药品列表
		GetMedicinesList(ctx context.Context, in *GetMedicinesListReq, opts ...grpc.CallOption) (*GetMedicinesListResp, error)
		// 获取药品详情
		GetMedicinesDetail(ctx context.Context, in *GetMedicinesDetailReq, opts ...grpc.CallOption) (*GetMedicinesDetailResp, error)
		// 创建病例
		CreateCareHistory(ctx context.Context, in *CreateCareHistoryReq, opts ...grpc.CallOption) (*CreateCareHistoryResp, error)
		// 获取病例列表
		GetCareHistoryList(ctx context.Context, in *GetCareHistoryListReq, opts ...grpc.CallOption) (*GetCareHistoryListResp, error)
		// 获取病例详情
		GetCareHistoryDetail(ctx context.Context, in *GetCareHistoryDetailReq, opts ...grpc.CallOption) (*GetCareHistoryDetailResp, error)
		// 获取周排行榜
		GetWeeklyRanking(ctx context.Context, in *GetWeeklyRankingReq, opts ...grpc.CallOption) (*GetWeeklyRankingResp, error)
		// 生成周排行榜
		GenerateWeeklyRanking(ctx context.Context, in *GenerateWeeklyRankingReq, opts ...grpc.CallOption) (*GenerateWeeklyRankingResp, error)
		// 获取医生业绩
		GetDoctorPerformance(ctx context.Context, in *GetDoctorPerformanceReq, opts ...grpc.CallOption) (*GetDoctorPerformanceResp, error)
	}

	defaultDoctorService struct {
		cli zrpc.Client
	}
)

func NewDoctorService(cli zrpc.Client) DoctorService {
	return &defaultDoctorService{
		cli: cli,
	}
}

// 开处方
func (m *defaultDoctorService) CreatePrescription(ctx context.Context, in *CreatePrescriptionReq, opts ...grpc.CallOption) (*CreatePrescriptionResp, error) {
	client := doctor.NewDoctorServiceClient(m.cli.Conn())
	return client.CreatePrescription(ctx, in, opts...)
}

// 审核处方
func (m *defaultDoctorService) ReviewPrescription(ctx context.Context, in *ReviewPrescriptionReq, opts ...grpc.CallOption) (*ReviewPrescriptionResp, error) {
	client := doctor.NewDoctorServiceClient(m.cli.Conn())
	return client.ReviewPrescription(ctx, in, opts...)
}

// 获取处方列表
func (m *defaultDoctorService) GetPrescriptionList(ctx context.Context, in *GetPrescriptionListReq, opts ...grpc.CallOption) (*GetPrescriptionListResp, error) {
	client := doctor.NewDoctorServiceClient(m.cli.Conn())
	return client.GetPrescriptionList(ctx, in, opts...)
}

// 获取处方详情
func (m *defaultDoctorService) GetPrescriptionDetail(ctx context.Context, in *GetPrescriptionDetailReq, opts ...grpc.CallOption) (*GetPrescriptionDetailResp, error) {
	client := doctor.NewDoctorServiceClient(m.cli.Conn())
	return client.GetPrescriptionDetail(ctx, in, opts...)
}

// 选择药品
func (m *defaultDoctorService) SelectMedicines(ctx context.Context, in *SelectMedicinesReq, opts ...grpc.CallOption) (*SelectMedicinesResp, error) {
	client := doctor.NewDoctorServiceClient(m.cli.Conn())
	return client.SelectMedicines(ctx, in, opts...)
}

// 获取药品列表
func (m *defaultDoctorService) GetMedicinesList(ctx context.Context, in *GetMedicinesListReq, opts ...grpc.CallOption) (*GetMedicinesListResp, error) {
	client := doctor.NewDoctorServiceClient(m.cli.Conn())
	return client.GetMedicinesList(ctx, in, opts...)
}

// 获取药品详情
func (m *defaultDoctorService) GetMedicinesDetail(ctx context.Context, in *GetMedicinesDetailReq, opts ...grpc.CallOption) (*GetMedicinesDetailResp, error) {
	client := doctor.NewDoctorServiceClient(m.cli.Conn())
	return client.GetMedicinesDetail(ctx, in, opts...)
}

// 创建病例
func (m *defaultDoctorService) CreateCareHistory(ctx context.Context, in *CreateCareHistoryReq, opts ...grpc.CallOption) (*CreateCareHistoryResp, error) {
	client := doctor.NewDoctorServiceClient(m.cli.Conn())
	return client.CreateCareHistory(ctx, in, opts...)
}

// 获取病例列表
func (m *defaultDoctorService) GetCareHistoryList(ctx context.Context, in *GetCareHistoryListReq, opts ...grpc.CallOption) (*GetCareHistoryListResp, error) {
	client := doctor.NewDoctorServiceClient(m.cli.Conn())
	return client.GetCareHistoryList(ctx, in, opts...)
}

// 获取病例详情
func (m *defaultDoctorService) GetCareHistoryDetail(ctx context.Context, in *GetCareHistoryDetailReq, opts ...grpc.CallOption) (*GetCareHistoryDetailResp, error) {
	client := doctor.NewDoctorServiceClient(m.cli.Conn())
	return client.GetCareHistoryDetail(ctx, in, opts...)
}

// 获取周排行榜
func (m *defaultDoctorService) GetWeeklyRanking(ctx context.Context, in *GetWeeklyRankingReq, opts ...grpc.CallOption) (*GetWeeklyRankingResp, error) {
	client := doctor.NewDoctorServiceClient(m.cli.Conn())
	return client.GetWeeklyRanking(ctx, in, opts...)
}

// 生成周排行榜
func (m *defaultDoctorService) GenerateWeeklyRanking(ctx context.Context, in *GenerateWeeklyRankingReq, opts ...grpc.CallOption) (*GenerateWeeklyRankingResp, error) {
	client := doctor.NewDoctorServiceClient(m.cli.Conn())
	return client.GenerateWeeklyRanking(ctx, in, opts...)
}

// 获取医生业绩
func (m *defaultDoctorService) GetDoctorPerformance(ctx context.Context, in *GetDoctorPerformanceReq, opts ...grpc.CallOption) (*GetDoctorPerformanceResp, error) {
	client := doctor.NewDoctorServiceClient(m.cli.Conn())
	return client.GetDoctorPerformance(ctx, in, opts...)
}
