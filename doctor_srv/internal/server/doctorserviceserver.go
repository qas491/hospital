// Code generated by goctl. DO NOT EDIT.
// Source: doctor.proto

package server

import (
	"context"

	"github.com/qas491/hospital/doctor_srv/doctor"
	"github.com/qas491/hospital/doctor_srv/internal/logic"
	"github.com/qas491/hospital/doctor_srv/internal/svc"
)

type DoctorServiceServer struct {
	svcCtx *svc.ServiceContext
	doctor.UnimplementedDoctorServiceServer
}

func NewDoctorServiceServer(svcCtx *svc.ServiceContext) *DoctorServiceServer {
	return &DoctorServiceServer{
		svcCtx: svcCtx,
	}
}

// 开处方
func (s *DoctorServiceServer) CreatePrescription(ctx context.Context, in *doctor.CreatePrescriptionReq) (*doctor.CreatePrescriptionResp, error) {
	l := logic.NewCreatePrescriptionLogic(ctx, s.svcCtx)
	return l.CreatePrescription(in)
}

// 审核处方
func (s *DoctorServiceServer) ReviewPrescription(ctx context.Context, in *doctor.ReviewPrescriptionReq) (*doctor.ReviewPrescriptionResp, error) {
	l := logic.NewReviewPrescriptionLogic(ctx, s.svcCtx)
	return l.ReviewPrescription(in)
}

// 获取处方列表
func (s *DoctorServiceServer) GetPrescriptionList(ctx context.Context, in *doctor.GetPrescriptionListReq) (*doctor.GetPrescriptionListResp, error) {
	l := logic.NewGetPrescriptionListLogic(ctx, s.svcCtx)
	return l.GetPrescriptionList(in)
}

// 获取处方详情
func (s *DoctorServiceServer) GetPrescriptionDetail(ctx context.Context, in *doctor.GetPrescriptionDetailReq) (*doctor.GetPrescriptionDetailResp, error) {
	l := logic.NewGetPrescriptionDetailLogic(ctx, s.svcCtx)
	return l.GetPrescriptionDetail(in)
}

// 选择药品
func (s *DoctorServiceServer) SelectMedicines(ctx context.Context, in *doctor.SelectMedicinesReq) (*doctor.SelectMedicinesResp, error) {
	l := logic.NewSelectMedicinesLogic(ctx, s.svcCtx)
	return l.SelectMedicines(in)
}

// 获取药品列表
func (s *DoctorServiceServer) GetMedicinesList(ctx context.Context, in *doctor.GetMedicinesListReq) (*doctor.GetMedicinesListResp, error) {
	l := logic.NewGetMedicinesListLogic(ctx, s.svcCtx)
	return l.GetMedicinesList(in)
}

// 获取药品详情
func (s *DoctorServiceServer) GetMedicinesDetail(ctx context.Context, in *doctor.GetMedicinesDetailReq) (*doctor.GetMedicinesDetailResp, error) {
	l := logic.NewGetMedicinesDetailLogic(ctx, s.svcCtx)
	return l.GetMedicinesDetail(in)
}

// 创建病例
func (s *DoctorServiceServer) CreateCareHistory(ctx context.Context, in *doctor.CreateCareHistoryReq) (*doctor.CreateCareHistoryResp, error) {
	l := logic.NewCreateCareHistoryLogic(ctx, s.svcCtx)
	return l.CreateCareHistory(in)
}

// 获取病例列表
func (s *DoctorServiceServer) GetCareHistoryList(ctx context.Context, in *doctor.GetCareHistoryListReq) (*doctor.GetCareHistoryListResp, error) {
	l := logic.NewGetCareHistoryListLogic(ctx, s.svcCtx)
	return l.GetCareHistoryList(in)
}

// 获取病例详情
func (s *DoctorServiceServer) GetCareHistoryDetail(ctx context.Context, in *doctor.GetCareHistoryDetailReq) (*doctor.GetCareHistoryDetailResp, error) {
	l := logic.NewGetCareHistoryDetailLogic(ctx, s.svcCtx)
	return l.GetCareHistoryDetail(in)
}

// 获取周排行榜
func (s *DoctorServiceServer) GetWeeklyRanking(ctx context.Context, in *doctor.GetWeeklyRankingReq) (*doctor.GetWeeklyRankingResp, error) {
	l := logic.NewGetWeeklyRankingLogic(ctx, s.svcCtx)
	return l.GetWeeklyRanking(in)
}

// 生成周排行榜
func (s *DoctorServiceServer) GenerateWeeklyRanking(ctx context.Context, in *doctor.GenerateWeeklyRankingReq) (*doctor.GenerateWeeklyRankingResp, error) {
	l := logic.NewGenerateWeeklyRankingLogic(ctx, s.svcCtx)
	return l.GenerateWeeklyRanking(in)
}

// 获取医生业绩
func (s *DoctorServiceServer) GetDoctorPerformance(ctx context.Context, in *doctor.GetDoctorPerformanceReq) (*doctor.GetDoctorPerformanceResp, error) {
	l := logic.NewGetDoctorPerformanceLogic(ctx, s.svcCtx)
	return l.GetDoctorPerformance(in)
}
